* パッケージングを支える技術
** PEP
   - https://packaging.python.org/specifications/

*** PEP 345 -- Metadata for Python Software Packages 1.2

*** PEP 376 -- Database of Installed Python Distributions

*** PEP 425 -- Compatibility Tags for Built Distributions

*** PEP 426 -- Metadata for Python Software Packages 2.0

    - PEP 425 , defining a compatibility tagging mechanism for binary files
    - PEP 427 , defining the pre-built "wheel" format
    - PEP 440 , covering the versioning identification and selection scheme
    - PEP 503 , /simple/ package repository API
    - PEP 508 , covering dependency declarations and environment markers
    - PEP 513 , defining the "manylinux1" compatibility tag
    - PEP 518 , defining a static config file for sdist build system dependencies

*** PEP 427 -- The Wheel Binary Package Format 1.0

*** PEP 496 -- Environment Markers

*** PEP 440 -- Version Identification and Dependency Specification

*** PEP 491 -- The Wheel Binary Package Format 1.9

*** PEP 503 -- Simple Repository API

*** PEP 508 -- Dependency specification for Python Software Packages

*** PEP 513 -- A Platform Tag for Portable Linux Built Distributions

*** PEP 516 -- Build system abstraction for pip/conda etc

*** PEP 518 -- Specifying Minimum Build System Requirements for Python Projects

** pypa

*** setuptools
*** virtualenv
*** pip
*** wheel
*** auditwheel
*** distlib

    - [[http://distlib.readthedocs.io/en/latest/][distlib documentation]]
    - [[https://pypi.python.org/pypi/distlib][pypa distlib]]

*** packaging

** python

*** PYTHONPATH

*** .pth

*** site-packages/user-site-packages

*** distutils

** sdistとはなにか？

** manylinux1

** プログラミングPythonパッケージ

   - distlibはPEPで決まったことを実装しているライブラリ
   - distlibを使えばパッケージを操作できる（PEPで決まってる範囲で）

     #+BEGIN_SRC python

>>> import sys
>>> import os
>>> sys.path.append(os.path.join(os.getcwd(), 'distlib-0.2.3-py3-none-any.whl'))
>>> import distlib
>>> distlib

     #+END_SRC

*** パッケージング
**** パッケージメタデータ



**** wheelパッケージを作成する

     - distlib.wheel

*** 配布

**** github リリース

**** pypi に登録

**** simple package repository

*** インストール

**** wheelパッケージをインストールする

     - distlib.locators
     - distlib.wheel

**** インストール一覧

     - distlib.database


     #+BEGIN_SRC python
>>> import distlib.database
>>> dist_path = distlib.database.DistributionPath()
>>> for dist in dist_path.get_distributions():
...     print(dist)
...
pip 8.1.2
distlib 0.2.3
wheel 0.29.0
setuptools 25.1.6

     #+END_SRC

**** ライブラリ依存ツリー

     #+BEGIN_SRC python

>>> graph = distlib.database.make_graph(list(dist_path.get_distributions()))
>>> graph
translationstring 1.3
PasteDeploy 1.5.2
setuptools 25.1.6
wheel 0.29.0
WebOb 1.6.1
zope.interface 4.2.0
    setuptools 25.1.6 [setuptools]
pyramid 1.7
    zope.deprecation 4.1.2 [zope.deprecation (>=3.5.0)]
        setuptools 25.1.6 [setuptools]
    translationstring 1.3 [translationstring (>=0.4)]
    WebOb 1.6.1 [WebOb (>=1.3.1)]
    repoze.lru 0.6 [repoze.lru (>=0.4)]
    zope.interface 4.2.0 [zope.interface (>=3.8.0)]
        setuptools 25.1.6 [setuptools]
    PasteDeploy 1.5.2 [PasteDeploy (>=1.5.0)]
    setuptools 25.1.6 [setuptools]
    venusian 1.0 [venusian (>=1.0a3)]
repoze.lru 0.6
zope.deprecation 4.1.2
    setuptools 25.1.6 [setuptools]
venusian 1.0
pip 8.1.2
distlib 0.2.3
     #+END_SRC
*** 実行
**** sys.path
